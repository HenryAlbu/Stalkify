{"version":3,"sources":["webpack:///./src/app/pages/register/register.module.ts","webpack:///./src/app/pages/register/register.page.html","webpack:///./src/app/pages/register/register.page.scss","webpack:///./src/app/pages/register/register.page.ts"],"names":[],"mappings":"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","file":"pages-register-register-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { RegisterPage } from './register.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: RegisterPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    IonicModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [RegisterPage]\r\n})\r\nexport class RegisterPageModule {}\r\n","module.exports = \"<ion-content padding class=\\\"auth-page\\\">  \\r\\n  <div class=\\\"register-page\\\">\\r\\n\\r\\n    <!-- IMAGE UPLOAD -->  \\r\\n    <ion-grid>\\r\\n          <ion-row> \\r\\n            <ion-col>     \\r\\n              <ion-avatar *ngFor=\\\"let img of images; index as pos\\\">\\r\\n                <img [src]=\\\"img.path\\\" /> \\r\\n              </ion-avatar>        \\r\\n            </ion-col>\\r\\n        </ion-row>\\r\\n    </ion-grid>\\r\\n    <!-- IF THERE IS AN IMAGE -->\\r\\n    <div *ngFor=\\\"let img of images; index as pos\\\">\\r\\n      <ion-grid>\\r\\n          <ion-row> \\r\\n            <ion-col>\\r\\n              <ion-button color=\\\"secondary\\\" (click)=\\\"selectdeleteImage(img, pos)\\\" expand=\\\"block\\\">RETAKE</ion-button>\\r\\n            </ion-col>\\r\\n            <ion-col>\\r\\n              <ion-button color=\\\"secondary\\\" (click)=\\\"deleteImage(img, pos)\\\" expand=\\\"block\\\">DELETE</ion-button>             \\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n      </ion-grid>\\r\\n    </div>    \\r\\n\\r\\n\\r\\n    <!-- IF THERE IS NO IMAGE -->\\r\\n    <div *ngIf=\\\"images.length == 0\\\">\\r\\n      <ion-avatar>\\r\\n        <ion-img src=\\\"assets/img/user.png\\\"></ion-img>\\r\\n      </ion-avatar>  \\r\\n      <div class=\\\"space-top\\\"></div>     \\r\\n      <ion-button color=\\\"secondary\\\" (click)=\\\"selectImage()\\\" expand=\\\"block\\\">\\r\\n        <ion-icon slot=\\\"start\\\" name=\\\"camera\\\"></ion-icon>\\r\\n          Add Profile Image\\r\\n      </ion-button>\\r\\n      <p> Your profile image will be the image used when you are chosen</p>\\r\\n    </div>   \\r\\n\\r\\n\\r\\n    <!-- Username -->\\r\\n    <ion-item no-padding class=\\\"animated fadeInUp\\\">\\r\\n      <ion-label color=\\\"secondary\\\" position=\\\"floating\\\">\\r\\n        <ion-icon name=\\\"person\\\" item-start></ion-icon>\\r\\n        Username:\\r\\n      </ion-label>\\r\\n      <ion-input color=\\\"secondary\\\" type=\\\"username\\\" [(ngModel)]=\\\"username\\\"></ion-input>\\r\\n    </ion-item>\\r\\n\\r\\n    <!-- Full Name -->\\r\\n    <ion-item no-padding class=\\\"animated fadeInUp\\\">\\r\\n      <ion-label color=\\\"secondary\\\" position=\\\"floating\\\">\\r\\n        <ion-icon name=\\\"person\\\" item-start></ion-icon>\\r\\n        Full Name: (First and Last)\\r\\n      </ion-label>\\r\\n      <ion-input color=\\\"secondary\\\" type=\\\"fullName\\\" [(ngModel)]=\\\"fullName\\\"></ion-input>\\r\\n    </ion-item>\\r\\n\\r\\n    <!-- Full Name -->\\r\\n    <ion-item no-padding class=\\\"animated fadeInUp\\\">\\r\\n      <ion-label color=\\\"secondary\\\" position=\\\"floating\\\">\\r\\n        <ion-icon name=\\\"mail\\\" item-start></ion-icon>\\r\\n          Email:\\r\\n      </ion-label>\\r\\n      <ion-input color=\\\"secondary\\\" type=\\\"email\\\" [(ngModel)]=\\\"email\\\"></ion-input>\\r\\n    </ion-item>\\r\\n      \\r\\n\\r\\n    <!-- Password -->\\r\\n    <ion-item no-padding class=\\\"animated fadeInUp\\\">\\r\\n      <ion-label position=\\\"floating\\\">\\r\\n        <ion-icon name=\\\"lock\\\" item-start></ion-icon>\\r\\n        Password:\\r\\n      </ion-label>\\r\\n      <ion-input color=\\\"secondary\\\" type=\\\"password\\\"  [(ngModel)]=\\\"password\\\"></ion-input>\\r\\n    </ion-item>  \\r\\n\\r\\n    <!-- Password Confirm -->\\r\\n    <ion-item no-padding class=\\\"animated fadeInUp\\\">\\r\\n      <ion-label position=\\\"floating\\\">\\r\\n        <ion-icon name=\\\"lock\\\" item-start></ion-icon>\\r\\n        Confirm Password:\\r\\n      </ion-label>\\r\\n      <ion-input color=\\\"secondary\\\" type=\\\"password\\\"  [(ngModel)]=\\\"confirm_password\\\"></ion-input>\\r\\n    </ion-item>      \\r\\n    \\r\\n\\r\\n    <!-- Register Button -->\\r\\n    <section class=\\\"space-top\\\">      \\r\\n    <div *ngFor=\\\"let img of images; index as pos\\\">  \\r\\n      <ion-button color=\\\"secondary\\\" (click)=\\\"prosesRegister(img)\\\" expand=\\\"block\\\">Register</ion-button>\\r\\n    </div>\\r\\n\\r\\n    <div *ngIf=\\\"images.length == 0\\\">\\r\\n      <ion-button color=\\\"secondary\\\" expand=\\\"block\\\" disabled>Register</ion-button>\\r\\n    </div>\\r\\n    </section>\\r\\n    \\r\\n\\r\\n    <!-- Sign Up Button -->\\r\\n    <div text-center class=\\\"space-top\\\">\\r\\n      <span (click)=\\\"formLogin()\\\" class=\\\"paz\\\" tappable>\\r\\n        <ion-text color=\\\"light\\\">\\r\\n          My bad fam, <strong>I already have an account</strong>\\r\\n        </ion-text>\\r\\n      </span>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"space-top-20\\\"></div>\\r\\n</ion-content>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3JlZ2lzdGVyL3JlZ2lzdGVyLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit, ChangeDetectorRef } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { PostProvider } from '../../../providers/post-provider';\r\nimport { ActionSheetController, ToastController, Platform, LoadingController } from '@ionic/angular';\r\n\r\nimport { Camera, CameraOptions, PictureSourceType } from '@ionic-native/Camera/ngx';\r\nimport { File, FileEntry } from '@ionic-native/File/ngx';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { WebView } from '@ionic-native/ionic-webview/ngx';\r\nimport { Storage } from '@ionic/storage';\r\nimport { FilePath } from '@ionic-native/file-path/ngx';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\nconst STORAGE_KEY = 'my_images';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.page.html',\r\n  styleUrls: ['./register.page.scss'],\r\n})\r\nexport class RegisterPage implements OnInit {\r\n  \r\n  images = [];\r\n  username: string = \"\";\r\n  password: string = \"\";\r\n  userPhoto: string = \"\";\r\n  confirm_password: string = \"\";\r\n  fullName: string = \"\";\r\n  email: string = \"\";\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private postPvdr: PostProvider,\r\n    public toastCtrl : ToastController,\r\n    private camera: Camera, \r\n    private file: File, \r\n    private http: HttpClient, \r\n    private webview: WebView,\r\n    private actionSheetController: ActionSheetController, \r\n    private storage: Storage,\r\n    private plt: Platform, \r\n    private loadingController: LoadingController,\r\n    private ref: ChangeDetectorRef, \r\n    private filePath: FilePath\r\n  ) { }\r\n\r\n  // IMAGE UPLOAD STUFF ---------------------------------\r\n  ngOnInit() {\r\n    this.plt.ready().then(() => {\r\n    //this.loadStoredImages();\r\n    });\r\n  }\r\n\r\n  loadStoredImages() {\r\n    this.storage.get(STORAGE_KEY).then(images => {\r\n      if (images) {\r\n        let arr = JSON.parse(images);\r\n        this.images = [];\r\n        for (let img of arr) {\r\n          let filePath = this.file.dataDirectory + img;\r\n          let resPath = this.pathForImage(filePath);\r\n          this.images.push({ name: img, path: resPath, filePath: filePath });          \r\n        }\r\n      }\r\n    });\r\n  }\r\n \r\n  pathForImage(img) {\r\n    if (img === null) {\r\n      return '';\r\n    } else {\r\n      let converted = this.webview.convertFileSrc(img);\r\n      return converted;\r\n    }\r\n  }\r\n \r\n  async presentToast(text) {\r\n    const toast = await this.toastCtrl.create({\r\n        message: text,\r\n        position: 'bottom',\r\n        duration: 3000\r\n    });\r\n    toast.present();\r\n  }\r\n \r\n  async selectImage() {\r\n    this.takePicture(this.camera.PictureSourceType.CAMERA);\r\n  }\r\n   \r\n  takePicture(sourceType: PictureSourceType) {\r\n      var options: CameraOptions = {\r\n          quality: 100,\r\n          sourceType: sourceType,\r\n          targetWidth: 500,\r\n          cameraDirection: 1,\r\n          saveToPhotoAlbum: false,\r\n          correctOrientation: true\r\n      };\r\n   \r\n      this.camera.getPicture(options).then(imagePath => {\r\n          if (this.plt.is('android') && sourceType === this.camera.PictureSourceType.PHOTOLIBRARY) {\r\n              this.filePath.resolveNativePath(imagePath)\r\n                  .then(filePath => {\r\n                      let correctPath = filePath.substr(0, filePath.lastIndexOf('/') + 1);\r\n                      let currentName = imagePath.substring(imagePath.lastIndexOf('/') + 1, imagePath.lastIndexOf('?'));\r\n                      this.copyFileToLocalDir(correctPath, currentName, this.createFileName());                      \r\n                  });\r\n          } else {\r\n              var currentName = imagePath.substr(imagePath.lastIndexOf('/') + 1);\r\n              var correctPath = imagePath.substr(0, imagePath.lastIndexOf('/') + 1);\r\n              this.copyFileToLocalDir(correctPath, currentName, this.createFileName());              \r\n          }\r\n      });\r\n   \r\n  }\r\n\r\n  createFileName() {\r\n    var d = new Date(),\r\n        n = d.getTime(),\r\n        newFileName = n + \".jpg\";\r\n        this.userPhoto = newFileName;\r\n    return newFileName;\r\n}\r\n \r\ncopyFileToLocalDir(namePath, currentName, newFileName) {\r\n    this.file.copyFile(namePath, currentName, this.file.dataDirectory, newFileName).then(success => {\r\n        this.updateStoredImages(newFileName);\r\n    }, error => {\r\n        this.presentToast('Error while storing file.');\r\n    });\r\n}\r\n \r\nupdateStoredImages(name) {\r\n    this.storage.get(STORAGE_KEY).then(images => {\r\n        let arr = JSON.parse(images);\r\n        if (!arr) {\r\n            let newImages = [name];\r\n            this.storage.set(STORAGE_KEY, JSON.stringify(newImages));\r\n        } else {\r\n            arr.push(name);\r\n            this.storage.set(STORAGE_KEY, JSON.stringify(arr));\r\n        }\r\n \r\n        let filePath = this.file.dataDirectory + name;\r\n        let resPath = this.pathForImage(filePath);\r\n \r\n        let newEntry = {\r\n            name: name,\r\n            path: resPath,\r\n            filePath: filePath\r\n        };\r\n \r\n        this.images = [newEntry, ...this.images];\r\n        this.ref.detectChanges(); // trigger change detection cycle\r\n    });\r\n}\r\n\r\ndeleteImage(imgEntry, position) {\r\n  \r\n  this.images.splice(position, 1);\r\n\r\n  this.storage.get(STORAGE_KEY).then(images => {\r\n      let arr = JSON.parse(images);\r\n      let filtered = arr.filter(name => name != imgEntry.name);\r\n      this.storage.set(STORAGE_KEY, JSON.stringify(filtered));\r\n\r\n      var correctPath = imgEntry.filePath.substr(0, imgEntry.filePath.lastIndexOf('/') + 1);\r\n\r\n      this.file.removeFile(correctPath, imgEntry.name).then(res => {\r\n          this.presentToast('File removed.');\r\n      });\r\n  });\r\n}\r\n\r\nselectdeleteImage(imgEntry, position) {\r\n  this.images.splice(position, 1);\r\n\r\n  this.storage.get(STORAGE_KEY).then(images => {\r\n      let arr = JSON.parse(images);\r\n      let filtered = arr.filter(name => name != imgEntry.name);\r\n      this.storage.set(STORAGE_KEY, JSON.stringify(filtered));\r\n\r\n      var correctPath = imgEntry.filePath.substr(0, imgEntry.filePath.lastIndexOf('/') + 1);\r\n\r\n      this.file.removeFile(correctPath, imgEntry.name).then(res => {\r\n          this.presentToast('File removed.');\r\n      });\r\n  });\r\n  this.takePicture(this.camera.PictureSourceType.CAMERA);\r\n}\r\n\r\nstartUpload(imgEntry) {\r\n  this.file.resolveLocalFilesystemUrl(imgEntry.filePath)\r\n      .then(entry => {\r\n          ( < FileEntry > entry).file(file => this.readFile(file))\r\n      })\r\n      .catch(err => {\r\n          this.presentToast('Error while reading file.');\r\n      });\r\n}\r\n\r\nreadFile(file: any) {\r\n  const reader = new FileReader();\r\n  reader.onload = () => {\r\n      const formData = new FormData();\r\n      const imgBlob = new Blob([reader.result], {\r\n          type: file.type\r\n      });\r\n      formData.append('file', imgBlob, file.name);\r\n      this.uploadImageData(formData);\r\n  };\r\n  reader.readAsArrayBuffer(file);\r\n}\r\n\r\nasync uploadImageData(formData: FormData) {\r\n  const loading = await this.loadingController.create({\r\n      message: 'Gucci',\r\n  });\r\n  await loading.present();\r\n\r\n  this.http.post(\"http://spontadeal.com/stalkify/upload/upload.php\", formData)\r\n      .pipe(\r\n          finalize(() => {\r\n              loading.dismiss();\r\n          })\r\n      )\r\n      .subscribe(res => {\r\n          if (res['success']) {\r\n              this.presentToast('File upload complete.')\r\n          } else {\r\n              this.presentToast('File upload failed.')\r\n          }\r\n      });\r\n}\r\n\r\n  // // //\r\n  formLogin() {\r\n    this.router.navigate(['/login']);\r\n  }\r\n\r\n  // Makes sure all feilds are filled in register form\r\n  // If form is ok, send data to api\r\n  async prosesRegister(imgEntry){\r\n    if(this.username==\"\" || this.fullName==\"\" || this.email==\"\"){\r\n      const toast = await this.toastCtrl.create({\r\n        message: \"Please fill out all fields\",\r\n        duration: 2000\r\n      });\r\n      toast.present();\r\n    }else if (this.confirm_password != this.password){\r\n      const toast = await this.toastCtrl.create({\r\n        message: \"Password does not match\",\r\n        duration: 2000\r\n      });\r\n      toast.present();\r\n    }else{\r\n      this.startUpload(imgEntry);\r\n      let body = {\r\n        username: this.username,\r\n        password: this.password,\r\n        fullName: this.fullName,\r\n        email: this.email,\r\n        userPhoto: this.userPhoto,\r\n        aksi: 'register'\r\n      };\r\n      this.postPvdr.postData(body, 'proses-api.php').subscribe(async data =>{\r\n        var alertmsg = data.msg;\r\n        if(data.success){\r\n          this.router.navigate(['/login']);\r\n          const toast = await this.toastCtrl.create({\r\n            message: 'Register successful',\r\n            duration: 2000\r\n          });\r\n          toast.present();\r\n        }else{\r\n          const toast = await this.toastCtrl.create({\r\n            message: alertmsg,\r\n            duration: 2000\r\n          });\r\n          toast.present();\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n}\r\n"],"sourceRoot":""}