{"version":3,"sources":["webpack:///./src/app/pages/login/login.module.ts","webpack:///./src/app/pages/login/login.page.html","webpack:///./src/app/pages/login/login.page.scss","webpack:///./src/app/pages/login/login.page.ts"],"names":[],"mappings":"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","file":"pages-login-login-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { LoginPage } from './login.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: LoginPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    IonicModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [LoginPage]\r\n})\r\nexport class LoginPageModule {}\r\n","module.exports = \"<ion-content padding class=\\\"auth-page\\\">  \\r\\n  <div class=\\\"login-page\\\">\\r\\n\\r\\n    <!-- Logo -->\\r\\n    <div class=\\\"logo\\\"></div>      \\r\\n    \\r\\n    <!-- Username -->\\r\\n    <ion-item no-padding class=\\\"animated fadeInUp\\\">\\r\\n      <ion-label position=\\\"floating\\\">\\r\\n        <ion-icon name=\\\"mail\\\" item-start></ion-icon>\\r\\n        Username\\r\\n      </ion-label>\\r\\n      <ion-input color=\\\"secondary\\\" type=\\\"username\\\" [(ngModel)]=\\\"username\\\"></ion-input>\\r\\n    </ion-item>\\r\\n      \\r\\n\\r\\n    <!-- Password -->\\r\\n    <ion-item no-padding class=\\\"animated fadeInUp\\\">\\r\\n      <ion-label position=\\\"floating\\\">\\r\\n        <ion-icon name=\\\"lock\\\" item-start></ion-icon>\\r\\n        Password\\r\\n      </ion-label>\\r\\n      <ion-input color=\\\"secondary\\\" type=\\\"password\\\"  [(ngModel)]=\\\"password\\\"></ion-input>\\r\\n    </ion-item>      \\r\\n    \\r\\n\\r\\n    <!-- Sign In Button -->\\r\\n    <div class=\\\"space-top\\\">\\r\\n      <ion-button  color=\\\"secondary\\\" (click)=\\\"prosesLogin()\\\" expand=\\\"block\\\">\\r\\n        <ion-icon name=\\\"log-in\\\"></ion-icon>\\r\\n        Signin\\r\\n      </ion-button>   \\r\\n    </div>\\r\\n\\r\\n    <!-- Sign Up Button -->\\r\\n    <div text-center class=\\\"space-top\\\">\\r\\n      <span (click)=\\\"formRegister()\\\" class=\\\"paz\\\" tappable>\\r\\n        <ion-text color=\\\"light\\\">\\r\\n          New here? <strong>Sign Up</strong>\\r\\n        </ion-text>\\r\\n      </span>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n</ion-content>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2xvZ2luL2xvZ2luLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { PostProvider } from '../../../providers/post-provider';\r\nimport { ToastController } from '@ionic/angular';\r\nimport { Storage } from '@ionic/storage';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.page.html',\r\n  styleUrls: ['./login.page.scss'],\r\n})\r\nexport class LoginPage implements OnInit {\r\n\r\n  username: string = \"\";\r\n  password: string = \"\";\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private postPvdr: PostProvider,\r\n    public toastCtrl: ToastController,\r\n    private storage: Storage\r\n  ) { }\r\n\r\n\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  // // //\r\n  formRegister() {\r\n    this.router.navigate(['/register']);\r\n    //this.navCtrl.navigateRoot('/register');\r\n  }\r\n\r\n  async prosesLogin() {\r\n    if (this.username != \"\" && this.password != \"\") {\r\n      console.log(\"username\" + this.username);\r\n      console.log(\"Password\" + this.password);\r\n      let body = {\r\n        username: this.username,\r\n        password: this.password,\r\n        aksi: 'login'\r\n      };\r\n      this.postPvdr.postData(body, 'proses-api.php').subscribe(async data => {\r\n        var alertmsg = data.msg;\r\n        if (data.success) {\r\n          // Create session storage\r\n          this.storage.set('session_storage', data.result);\r\n          this.router.navigate(['/tabs/home']);\r\n          const toast = await this.toastCtrl.create({\r\n            message: 'Login successful',\r\n            duration: 2000\r\n          });\r\n          toast.present();\r\n          this.username = \"\";\r\n          this.password = \"\";\r\n          console.log(data);\r\n        } else {\r\n          const toast = await this.toastCtrl.create({\r\n            message: alertmsg,\r\n            duration: 2000\r\n          });\r\n          toast.present();\r\n        }\r\n      });\r\n\r\n    } else {\r\n      const toast = await this.toastCtrl.create({\r\n        message: 'Username or password invalid',\r\n        duration: 2000\r\n      });\r\n      toast.present();\r\n    }\r\n  }\r\n}\r\n\r\n"],"sourceRoot":""}